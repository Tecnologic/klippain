[gcode_macro _USER_VARIABLES]
variable_probe_type_enabled: "tap_probe"
variable_cartographer_survey_randomise_tap: 5 #(in mm)
gcode:

# TAP probe definition also include the probe management macro directly from here
[include ../../../macros/base/probing/generic_probe.cfg]

[scanner]
#canbus_uuid:51eb6e4f876d
#serial:/dev/serial/by-id/usb-Cartographer_xxxxxxxxxxxxxxxxxx
speed: 15
lift_speed: 15
backlash_comp: 2.01
x_offset: 0.
y_offset: 24.4
trigger_distance: 2.
trigger_dive_threshold: 1.5
trigger_hysteresis: 0.006
cal_nozzle_z: 0.1
cal_floor: 0.1
cal_ceil:5.
cal_speed: 1.0
cal_move_speed: 10.
default_model_name: default
mesh_main_direction: x
mesh_cluster_size: 1
mesh_runs: 2
calibration_method: touch
z_offset: 0
sensor: cartographer
probe_speed: 3


[stepper_z]
endstop_pin: probe:z_virtual_endstop # use cartographer as virtual endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0

# special start module for z calibrating

[gcode_macro _CARTOGRAPHER_Z_CALIB]
description: Perform the Z calibration using the cartographer survey
gcode:
    #folling instruction of carto survey
    # move to tap location and probe_calibrate
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set status_leds_enabled = printer["gcode_macro _USER_VARIABLES"].status_leds_enabled %}
    {% set touch_location_x, touch_location_y = printer["configfile"].settings["scanner"]["scanner_touch_location"].split(',')|map('trim')|map('float') %}
    {% set homing_travel_speed = printer["gcode_macro _USER_VARIABLES"].homing_travel_speed|float * 60 %}
    {% set cartographer_survey_randomise_tap = printer["gcode_macro _USER_VARIABLES"].cartographer_survey_randomise_tap|int *10 %}

    # randomise a little bit tap location
    {% set random_offset_x = (range(-cartographer_survey_randomise_tap, cartographer_survey_randomise_tap) | random) %}
    {% set random_offset_y = (range(-cartographer_survey_randomise_tap, cartographer_survey_randomise_tap) | random) %}
    {% set final_tap_location_x = (touch_location_x + random_offset_x/10)|float %}
    {% set final_tap_location_y = (touch_location_y + random_offset_y/10)|float %}

    {% if status_leds_enabled %}
        STATUS_LEDS COLOR="CALIBRATING_Z"
    {% endif %}

    {% if verbose %}
        RESPOND MSG="Auto Z calibration..."
    {% endif %}
        
    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Must Home printer first!") }
    {% endif %}

    {% if verbose %}
        { action_respond_info("Probe calibrate") }
    {% endif %}

    SAVE_GCODE_STATE NAME=_CARTOGRAPHER_Z_CALIB

    #go to tap_location
    G90
    G0 X{final_tap_location_x} Y{final_tap_location_y} Z10 F{homing_travel_speed}

    RESTORE_GCODE_STATE NAME=_CARTOGRAPHER_Z_CALIB
  
    #Calibrate probe
    #PROBE_CALIBRATE METHOD=AUTO TAP_LOCATION_X={final_tap_location_x} TAP_LOCATION_Y={final_tap_location_y}
    CARTOGRAPHER_TOUCH TOUCH_LOCATION_X={final_tap_location_x} TOUCH_LOCATION_Y={final_tap_location_y}


    {% if status_leds_enabled %}
        STATUS_LEDS COLOR="READY"
    {% endif %}
