### GUI functions
# Mainsail introduces a new way to interact with the user, using the RESPOND command.
# This snippet provides a set of macros to create prompts and messages boxes in the GUI.
# it also works with Fluidd and Klipperscreen.

# confirmation prompt
[gcode_macro _PROMPT_QUESTION]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin {params.TITLE|default("Klippain-Chocolate")}"
    RESPOND TYPE=command MSG="action:prompt_text {params.MSG}"
    RESPOND TYPE=command MSG="action:prompt_footer_button Yes|{params.ACTION}"
    RESPOND TYPE=command MSG="action:prompt_footer_button No|_PROMPT_CLOSE|error"
    RESPOND TYPE=command MSG="action:prompt_show"

# message box prompt
[gcode_macro _PROMPT_MSGBOX]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin {params.TITLE|default("Klippain-Chocolate")}"
    RESPOND TYPE=command MSG="action:prompt_text {params.MSG}"
    RESPOND TYPE=command MSG="action:prompt_footer_button OK|_PROMPT_CLOSE|error"
    RESPOND TYPE=command MSG="action:prompt_show"

# selection prompt
# Usage: _PROMPT_SELECT TITLE=<TITLE> MSG=<MSG> OPTIONS=<comma separated values> 
#           ACTION=<MACRO> KEY=<PARAM TO ADD TO ACTION MACRO WITH OPTION VALUE>
[gcode_macro _PROMPT_SELECT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin {params.TITLE|default("Klippain-Chocolate")}"
    RESPOND TYPE=command MSG="action:prompt_text {params.MSG}"
    {% for option in params.OPTIONS.split(",") %}
        RESPOND TYPE=command MSG="action:prompt_button {option}|{params.ACTION} {params.KEY}=\"{option}\""
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_footer_button ABORT|_PROMPT_CLOSE|error"
    RESPOND TYPE=command MSG="action:prompt_show"

# close prompt
[gcode_macro _PROMPT_CLOSE]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"